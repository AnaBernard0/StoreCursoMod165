<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="&quot;Are you sure you want to delete this Category?" xml:space="preserve">
    <value>Tem a certeza que pretende apagar esta Categoria?</value>
  </data>
  <data name="&quot;Are you sure you want to delete this Product?&quot;" xml:space="preserve">
    <value>Tem a certeza que pretende apagar este Produto?</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Morada</value>
  </data>
  <data name="Are you sure you want to delete this Category?" xml:space="preserve">
    <value>Pretende apagar esta categoria?</value>
  </data>
  <data name="Are you sure you want to delete this Customer?" xml:space="preserve">
    <value>Tem a certeza que pretende apagar este Cliente?</value>
  </data>
  <data name="Are you sure you want to delete this Order?" xml:space="preserve">
    <value>Tem a certeza que pretende apagar esta Venda?</value>
  </data>
  <data name="Back to List" xml:space="preserve">
    <value>Voltar para a Lista</value>
  </data>
  <data name="Birthday" xml:space="preserve">
    <value>Data Nascimento</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categorias</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Categoria</value>
  </data>
  <data name="Category Creation error!" xml:space="preserve">
    <value>Erro na criação da categoria!</value>
  </data>
  <data name="Category Deletion error!" xml:space="preserve">
    <value>Erro a apagar a categoria!</value>
  </data>
  <data name="Category Edition error!" xml:space="preserve">
    <value>Erro na edição da categoria!</value>
  </data>
  <data name="Category successfully created!" xml:space="preserve">
    <value>Categoria criada com sucesso!</value>
  </data>
  <data name="Category successfully deleted!" xml:space="preserve">
    <value>Categoria apagada com sucesso!</value>
  </data>
  <data name="Check the category again!" xml:space="preserve">
    <value>Verifique a categoria novamente!</value>
  </data>
  <data name="Check the customer again!" xml:space="preserve">
    <value>Verifique o cliente novamente!</value>
  </data>
  <data name="Check the order again!" xml:space="preserve">
    <value>Verifique a venda novamente!</value>
  </data>
  <data name="Check the product again!" xml:space="preserve">
    <value>Verifique o produto novamente!</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>Cidade</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Criar</value>
  </data>
  <data name="Create New Category" xml:space="preserve">
    <value>Criar nova Categoria</value>
  </data>
  <data name="Create New Customer" xml:space="preserve">
    <value>Criar Novo Cliente</value>
  </data>
  <data name="Create New Order" xml:space="preserve">
    <value>Criar Nova Venda</value>
  </data>
  <data name="Create New Product" xml:space="preserve">
    <value>Criar Novo Produto</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Cliente</value>
  </data>
  <data name="Customer Creation error!" xml:space="preserve">
    <value>Erro ao criar o cliente!</value>
  </data>
  <data name="Customer Number" xml:space="preserve">
    <value>Número de Cliente</value>
  </data>
  <data name="Customer successfully created!" xml:space="preserve">
    <value>Cliente criado com sucesso!</value>
  </data>
  <data name="Customer successfully deleted!" xml:space="preserve">
    <value>Cliente eliminado com sucesso!</value>
  </data>
  <data name="Customer successfully edited!" xml:space="preserve">
    <value>Cliente editado com sucesso!</value>
  </data>
  <data name="Customers" xml:space="preserve">
    <value>Clientes</value>
  </data>
  <data name="Custumer Number" xml:space="preserve">
    <value>Nº Cliente</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Apagar</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Descrição</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Detalhes</value>
  </data>
  <data name="E-mail" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="Edit Order" xml:space="preserve">
    <value>Editar Venda</value>
  </data>
  <data name="Fiscal Number" xml:space="preserve">
    <value>Nº Contribuinte</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Início</value>
  </data>
  <data name="In Progress" xml:space="preserve">
    <value>Em Processamento</value>
  </data>
  <data name="Informations" xml:space="preserve">
    <value>Observações</value>
  </data>
  <data name="IsPaid" xml:space="preserve">
    <value>Pago?</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="Name of Status" xml:space="preserve">
    <value>Nome do Estado</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Não</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Número</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Venda</value>
  </data>
  <data name="Order Creation error!" xml:space="preserve">
    <value>Erro na criação da venda!</value>
  </data>
  <data name="Order edited to In Progress!" xml:space="preserve">
    <value>Venda editada para o Estado Em Progresso!</value>
  </data>
  <data name="Order Edition error!" xml:space="preserve">
    <value>Erro de edição de Venda!</value>
  </data>
  <data name="Order In Progress -&gt; To Processed" xml:space="preserve">
    <value>Venda Em progresso -&gt; Para Processada</value>
  </data>
  <data name="Order Processed -&gt; To Sent" xml:space="preserve">
    <value>Venda Processada -&gt; Para Enviada</value>
  </data>
  <data name="Order Sent!" xml:space="preserve">
    <value>Venda Enviada!</value>
  </data>
  <data name="Order successfully created!" xml:space="preserve">
    <value>Venda criada com sucesso!</value>
  </data>
  <data name="Order successfully deleted!" xml:space="preserve">
    <value>Venda eliminada com sucesso!</value>
  </data>
  <data name="Order successfully edited!" xml:space="preserve">
    <value>Venda editada com sucesso!</value>
  </data>
  <data name="Ordered" xml:space="preserve">
    <value>Encomendada</value>
  </data>
  <data name="Ordered -&gt; To In Progress" xml:space="preserve">
    <value>Venda Encomendada -&gt; Para Em Progresso</value>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Vendas</value>
  </data>
  <data name="Orders In Progress" xml:space="preserve">
    <value>Vendas Em Progresso</value>
  </data>
  <data name="Orders Ordered" xml:space="preserve">
    <value>Vendas Encomendadas</value>
  </data>
  <data name="Orders Processed" xml:space="preserve">
    <value>Vendas Processadas</value>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>Código Postal</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Preço</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Privacidade</value>
  </data>
  <data name="Processed" xml:space="preserve">
    <value>Processada</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Produto</value>
  </data>
  <data name="Product Creation error!" xml:space="preserve">
    <value>Erro na criação do produto!</value>
  </data>
  <data name="Product Deletion error!" xml:space="preserve">
    <value>Erro ao apagar produto!</value>
  </data>
  <data name="Product Edition error!" xml:space="preserve">
    <value>Erro na edição do produto!</value>
  </data>
  <data name="Product successfully created!" xml:space="preserve">
    <value>Produto criado com sucesso!</value>
  </data>
  <data name="Product successfully deleted!" xml:space="preserve">
    <value>Produto eleminado com sucesso!</value>
  </data>
  <data name="Product successfully edited!" xml:space="preserve">
    <value>Produto editado com sucesso!</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Produtos</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantidade</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="See All Orders" xml:space="preserve">
    <value>Ver Todas as Vendas</value>
  </data>
  <data name="Sent" xml:space="preserve">
    <value>Enviada</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Estado</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Hora</value>
  </data>
  <data name="Total Unpaid:" xml:space="preserve">
    <value>Total Por Pagar: </value>
  </data>
  <data name="Total Value" xml:space="preserve">
    <value>Preço Total</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>Peso</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Sim</value>
  </data>
</root>